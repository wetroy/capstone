------------------------------------------------------------------------
This is the project README file. Here, you should describe your project.
Tell the reader (someone who does not know anything about this project)
all she needs to know. The comments should usually include at least:
------------------------------------------------------------------------

PROJECT TITLE: CityScape Version 2
PURPOSE OF PROJECT: to use what I have learned since the first cityscape 
lab and incorperate it into one of our first labs to show the progress 
made.
VERSION or DATE: 4/24/15
DEPENDENCIES: The CityViewer class is dependent on the CityComponent 
class and the CityComponent class is dependent on the Sky, Grass,
Space, Building, UFO, House, and Road classes
HOW TO START THIS PROJECT: run the main method of the CityViewer class
AUTHORS: William Troy
USER INSTRUCTIONS: Run the CityViewer class and then the window should 
pop up with five buttons. The first decreases the order of the city. 
The second increases the order of the city. The third changes the sky
to either non-existant, day, or night. The fourth turns the space on 
and off. If the space is on but there is no sky nothing will appear. If 
space is on and the sky is set to day time a sun will appear and move 
as the order of the city changes. If the sky is set to night stars will be
placed randomly across the sky and a moon with craters will move across the 
sky as the order of the city changes. The fifth button turn the ufo on and
off. If the ufo is on a ufo will be placed at a random position in the 
window.
HOW THIS PROJECT DEMONSTRATES LEARNING: This projects takes in what we have 
learned from multiple labs and many units. It consists of creating buttons 
and a GUI interface that changes, creating multiple objects that get displayed,
using if statements and for loops, creating multiple classes that work together 
with dependencies to create a final product, and with making classes with multiple 
parameters so that these classes can be minipulated more by other classes so that 
less code has to be written and not as many classes have to be created.
